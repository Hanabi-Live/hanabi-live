{{define "content"}}
<style>
  th:hover {
    background-color: rgb(220, 220, 220);
    cursor: pointer;
  }
</style>

<div id="page-wrapper">

  <!-- Header -->
  <header id="header">
    <h1>{{ template "logo" }}</h1>
    <nav id="nav"></nav>
  </header>

  <!-- Main -->
  <section id="main" class="container max">
    <header>
      <h2><img src="/public/img/logos/header.svg" height="200"></h2>
    </header>
    <div class="row uniform 100%">
      <div class="col-12">
        <section class="box">
          <h2 class="align-center">
            {{if .NamesTitle}}
              {{.NamesTitle}}
            {{else}}
              {{.Name}}'s Profile
            {{end}}
          </h2>

          {{if not .NamesTitle}}
          <div>
            <ul class="actions fit" id="profile-buttons">
              <li>
                <a class="button fit icon fa-chart-area{{if eq .Title "Scores"}} disabled{{else}}" href="/scores/{{.Name}}{{end}}">
                  Scores & Statistics
                </a>
              </li>
              <li>
                <a class="button fit icon fa-history{{if eq .Title "History"}} disabled{{else}}" href="/history/{{.Name}}{{end}}">
                  Full Game History
                </a>
              </li>
              <li>
                <a class="button fit icon fa-question{{if eq .Title "Missing Scores"}} disabled{{else}}" href="/missing-scores/{{.Name}}{{end}}">
                  Missing Scores
                </a>
              </li>
              <li>
                <a class="button fit icon fa-tag{{if eq .Title "Tagged Games"}} disabled{{else}}" href="/tags/{{.Name}}{{end}}">
                  Tagged Games
                </a>
              </li>
            </ul>
          </div>
          {{end}}

          {{template "profile" .}}
        </section>
      </div>
    </div>
  </section>
</div>

<!-- Tooltips -->
<div class="hidden">
  <div id="modifier-deckplays" class="profile-tooltip">
    This score is not legitimate since the <strong>Bottom-Deck Blind-Play</strong> option was used.
  </div>
  <div id="modifier-emptyclues" class="profile-tooltip">
    This score is not legitimate since the <strong>Empty Clue</strong> option was used.
  </div>
  <div id="modifier-oneextracard" class="profile-tooltip">
    This score is not legitimate since the <strong>One Extra Card</strong> option was used.
  </div>
  <div id="modifier-onelesscard" class="profile-tooltip">
    This score is not legitimate since the <strong>One Less Card</strong> option was used.
  </div>
  <div id="modifier-allornothing" class="profile-tooltip">
    This score is not legitimate since the <strong>All or Nothing</strong> option was used.
  </div>
</div>

<script type="text/javascript" src="/public/js/lib/jquery-3.5.0.min.js"></script>
<script type="text/javascript" src="/public/js/lib/jquery.tablesorter-2.31.1.min.js"></script>
<script type="text/javascript" src="/public/js/lib/tooltipster.bundle.min.js"></script>
<script type="text/javascript">
  $(document).ready(() => {
    // Initialize the tooltips
    $('.tooltip').tooltipster({
      animation: 'grow',
      contentAsHTML: true,
      delay: 0,
      theme: [
        'tooltipster-shadow',
        'tooltipster-shadow-big',
      ],
    });

    // Initialize the table sorting
    $('table').tablesorter();

    initHistory();
    initMissingScores();
  });

  const initHistory = () => {
    if (
      !window.location.pathname.startsWith('/history/')
      && !window.location.pathname.startsWith('/seed/')
    ) {
      return;
    }

    // Initialize the "Filter by # of Players" dropdown
    // (which is not relevant on a seed listing page)
    if (window.location.pathname.startsWith('/seed/')) {
      $('#filter-by-players-label1').hide();
      $('#filter-by-players-label2').hide();
    } else {
      $('#filter-by-players').change(() => {
      filterHistoryRows();
    });
    }

    // Initialize the "Filter by Score" input field
    $('#filter-by-score').on('input', () => {
      filterHistoryRows();
    });

    // Initialize the "Filter by Variant" input field
    // (which is not relevant on a seed listing page)
    if (window.location.pathname.startsWith('/seed/')) {
      $('#filter-by-variant-label1').hide();
      $('#filter-by-variant-label2').hide();
    } else {
      $('#filter-by-variant').on('input', () => {
        filterHistoryRows();
      });
    }
  };

  const filterHistoryRows = () => {
    // Hide all rows
    $('.history-row').hide();

    // Get the filter values
    const numPlayers = $('#filter-by-players').val();
    const scoreString = $('#filter-by-score').val();
    const score = parseIntSafe(scoreString);
    const variant = $('#filter-by-variant').val();

    const numPlayersFilterEnabled = numPlayers !== 'all';
    const scoreFilterEnabled = score !== NaN && score >= 0 && score <= 30;
    const variantFilterEnabled = typeof variant === 'string' && variant !== '';

    // If no filters are active, show everything
    if (!numPlayersFilterEnabled && !scoreFilterEnabled && !variantFilterEnabled) {
      $('.history-row').show();
      setRowColors();
      return;
    }

    let historySelector = '';
    if (numPlayersFilterEnabled) {
      historySelector += `.history-row-players-${numPlayers}`;
    }
    if (scoreFilterEnabled) {
      historySelector += `.history-row-score-${score}`;
    }

    if (variantFilterEnabled) {
      $(`${historySelector}[data-variant="${variant}"]`).show();
    } else {
      $(historySelector).show();
    }

    setRowColors();
  };

  // In the Alpha HTML5 template, table rows are supposed to alternate colors
  // After sorting, the color alternation will be messed up, so manually reset all of the row colors
  const setRowColors = () => {
    const numRows = $('#history-table tr').length;
    const color1 = '#f8f8f8';
    const color2 = 'white';
    for (let i = 0; i < numRows; i++) {
      const colorForThisRow = i % 2 == 0 ? color1 : color2;
      $(`#history-row-${i}`).css('background-color', colorForThisRow);
    }
  }

  const initMissingScores = () => {
    if (!window.location.pathname.startsWith('/missing-scores/')) {
      return;
    }

    // Parse the number of players from the URL
    // e.g. ["", "missing-scores", "Alice", "Bob"] from "/missing-scores/Alice/Bob"
    const urlSegments = window.location.pathname.split('/');
    if (urlSegments < 3) {
      return;
    }
    const playerName = urlSegments[2];
    let numPlayers = 0;
    if (urlSegments.length >= 4) {
      numPlayers = parseIntSafe(urlSegments[3]);
      if (numPlayers === NaN) {
        numPlayers = 0;
      }
    }

    // Initialize the "Filter by # of Players" dropdown
    if (numPlayers === 0) {
      $('#filter-by-players').val('-');
    } else {
      $('#filter-by-players').val(numPlayers.toString());
      $('#filter-by-players option[value="-"]').remove();
    }
    $('#filter-by-players').change(() => {
      const numPlayers = $('#filter-by-players').val();
      window.location = `/missing-scores/${playerName}/${numPlayers}`;
    });
  }

  // Subroutines
  // The "parseIntSafe()" function is copied from "misc.ts"
  const parseIntSafe = (input) => {
    let trimmedInput = input.trim(); // Remove all leading and trailing whitespace
    const isNegativeNumber = trimmedInput.startsWith('-');
    if (isNegativeNumber) {
      // Remove the leading minus sign before we match the regular expression
      trimmedInput = trimmedInput.substring(1);
    }
    if (!trimmedInput.match(/^\d+$/)) { // "\d" matches any digit (same as "[0-9]")
      return NaN;
    }
    if (isNegativeNumber) {
      // Add the leading minus sign back
      trimmedInput = `-${trimmedInput}`;
    }
    return parseInt(trimmedInput, 10);
  };
</script>
{{end}}
